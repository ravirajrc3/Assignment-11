##Exploring data
install.packages("glmnet")
library(ggplot2)
library(glmnet)

datafile = file.path("d:","epic_recipes.txt")
recipes_dats = read.table(datsfile, fill=TRUE, col.names=1:max(count.fields(datsfile)), na.strings=c("","NA"),stringsAsFactors=FALSE)

#preparing the data

agg = aggregate(recipes_dats[,-1], by=list(recipes_dats[,1]), paste, collapse=",")
agg$combined = apply(agg[,2:ncol1(agg)], 1, paste, collapse=",")
agg$combined = gsub("NA","",agg$combined)
cusinies = as.data.frame(table(recipes_data[,1]))
cusinies
ingredients_freq = lapply(lapply(strsplit(a$combined,","), table), as.data.frame)
names(ingredients_freq) = ag[,1]

##normalizing the frequency

proportion = lapply(seq_along(ingredients_freq), function(i) {
  colnames(ingredients_freq[[i]])[2] = names(ingredients_freq)[i]
  ingredients_freq[[i]][,2] = names(ingredients_freq)[i]
  ingredients_freq[[i]]}
  }

names(proportion) = a[,1]
final = Reduce(function(...) merge(..., all=TRUE, by="Var1"), proportion)
row.names(final) = final[,1]
final[is.na(final)] = 0
prop_matrix = t(final)
s = sort(apply(prop_matrix, 2, sd), decreasing=TRUE)

final_imp = scale(subset(prop_matrix, select=names(which(s>0.1))))
heatmap.2(final_imp, trace="none", margins = c(6,11), col=top.colors(7), key=TRUE, key.title=NA, keysize=1.2, density.info="none")

##Applying PCA

pca_computation = princomp(final_imp)
pca_computation

##plotting the resilts

biplot(pca_computational, pc.biplot=TRUE, col=c("black","red"), cex=c(0.9,0.8), xlim=c(-2.5,2.5), lab='PC1, 39.7%", ylab="PC2, 24.5%")